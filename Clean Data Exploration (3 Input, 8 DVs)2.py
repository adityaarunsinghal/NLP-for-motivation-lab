{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import nltk\n",
    "import sklearn as sk\n",
    "import gensim.models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "from nltk.corpus import stopwords\n",
    "import string\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import numpy as np\n",
    "from ast import literal_eval\n",
    "sns.set()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "clean = pd.read_csv(\"/Users/aditya/Google Drive (as11919@nyu.edu)/Syncing with Mac/NYU Research Analysis/Motivation Lab/CleanData(v. analysis).csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PROLIFIC_PID</th>\n",
       "      <th>Condition</th>\n",
       "      <th>Wish</th>\n",
       "      <th>Outcome</th>\n",
       "      <th>Outcome Explain</th>\n",
       "      <th>How much do you feel that the WOOP exercise will be useful for clarifying other wishes?</th>\n",
       "      <th>How many minutes per day do you want to WOOP?</th>\n",
       "      <th>How likely is it that you will use the WOOP exercise for other wishes?</th>\n",
       "      <th>How likely is it that you will use the WOOP exercise in the future?</th>\n",
       "      <th>Regarding my WOOP wishes, I can see more clearly now.</th>\n",
       "      <th>I think I will benefit from WOOP.</th>\n",
       "      <th>I think the WOOP exercise is interesting.</th>\n",
       "      <th>I would be interested in learning more about the WOOP exercise.</th>\n",
       "      <th>Unnamed: 13</th>\n",
       "      <th>Unnamed: 14</th>\n",
       "      <th>Unnamed: 15</th>\n",
       "      <th>Unnamed: 16</th>\n",
       "      <th>Unnamed: 17</th>\n",
       "      <th>Unnamed: 18</th>\n",
       "      <th>Unnamed: 19</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>558af269fdf99b7dfef4d7bd</td>\n",
       "      <td>MC</td>\n",
       "      <td>do a Bible study</td>\n",
       "      <td>finish Bible study and feel fulfilled</td>\n",
       "      <td>I'll do the Bible study I've been meaning to d...</td>\n",
       "      <td>7.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>55b1add5fdf99b6731f04c5a</td>\n",
       "      <td>MC</td>\n",
       "      <td>I want to clean my house</td>\n",
       "      <td>I will get everything tidy</td>\n",
       "      <td>I will feel better in a nice clean house</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5626a6cfddff3c0011bcd3d8</td>\n",
       "      <td>I</td>\n",
       "      <td>Eat healthy and exercise</td>\n",
       "      <td>I burn more calories than I eat</td>\n",
       "      <td>I feel accomplished and good about mysefl</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>56a5da6181a8ca000d3e7f40</td>\n",
       "      <td>MC</td>\n",
       "      <td>Spend quality time with my cat</td>\n",
       "      <td>My cat appears happy</td>\n",
       "      <td>When my cat is happy, he is laying next to me ...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>56df2ea2452e1300056bc7df</td>\n",
       "      <td>MC</td>\n",
       "      <td>Go out to eat</td>\n",
       "      <td>Care Free</td>\n",
       "      <td>Happy, no problems</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>994</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>999 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                 PROLIFIC_PID Condition                            Wish  \\\n",
       "0    558af269fdf99b7dfef4d7bd        MC                do a Bible study   \n",
       "1    55b1add5fdf99b6731f04c5a        MC        I want to clean my house   \n",
       "2    5626a6cfddff3c0011bcd3d8         I        Eat healthy and exercise   \n",
       "3    56a5da6181a8ca000d3e7f40        MC  Spend quality time with my cat   \n",
       "4    56df2ea2452e1300056bc7df        MC                   Go out to eat   \n",
       "..                        ...       ...                             ...   \n",
       "994                       NaN       NaN                             NaN   \n",
       "995                       NaN       NaN                             NaN   \n",
       "996                       NaN       NaN                             NaN   \n",
       "997                       NaN       NaN                             NaN   \n",
       "998                       NaN       NaN                             NaN   \n",
       "\n",
       "                                   Outcome  \\\n",
       "0    finish Bible study and feel fulfilled   \n",
       "1               I will get everything tidy   \n",
       "2          I burn more calories than I eat   \n",
       "3                     My cat appears happy   \n",
       "4                               Care Free    \n",
       "..                                     ...   \n",
       "994                                    NaN   \n",
       "995                                    NaN   \n",
       "996                                    NaN   \n",
       "997                                    NaN   \n",
       "998                                    NaN   \n",
       "\n",
       "                                       Outcome Explain  \\\n",
       "0    I'll do the Bible study I've been meaning to d...   \n",
       "1             I will feel better in a nice clean house   \n",
       "2            I feel accomplished and good about mysefl   \n",
       "3    When my cat is happy, he is laying next to me ...   \n",
       "4                                   Happy, no problems   \n",
       "..                                                 ...   \n",
       "994                                                NaN   \n",
       "995                                                NaN   \n",
       "996                                                NaN   \n",
       "997                                                NaN   \n",
       "998                                                NaN   \n",
       "\n",
       "     How much do you feel that the WOOP exercise will be useful for clarifying other wishes?  \\\n",
       "0                                                  7.0                                         \n",
       "1                                                  1.0                                         \n",
       "2                                                  3.0                                         \n",
       "3                                                  4.0                                         \n",
       "4                                                  3.0                                         \n",
       "..                                                 ...                                         \n",
       "994                                                NaN                                         \n",
       "995                                                NaN                                         \n",
       "996                                                NaN                                         \n",
       "997                                                NaN                                         \n",
       "998                                                NaN                                         \n",
       "\n",
       "     How many minutes per day do you want to WOOP?  \\\n",
       "0                                              1.0   \n",
       "1                                              1.0   \n",
       "2                                              1.0   \n",
       "3                                              1.0   \n",
       "4                                              1.0   \n",
       "..                                             ...   \n",
       "994                                            NaN   \n",
       "995                                            NaN   \n",
       "996                                            NaN   \n",
       "997                                            NaN   \n",
       "998                                            NaN   \n",
       "\n",
       "     How likely is it that you will use the WOOP exercise for other wishes?  \\\n",
       "0                                                  7.0                        \n",
       "1                                                  2.0                        \n",
       "2                                                  2.0                        \n",
       "3                                                  4.0                        \n",
       "4                                                  4.0                        \n",
       "..                                                 ...                        \n",
       "994                                                NaN                        \n",
       "995                                                NaN                        \n",
       "996                                                NaN                        \n",
       "997                                                NaN                        \n",
       "998                                                NaN                        \n",
       "\n",
       "     How likely is it that you will use the WOOP exercise in the future?  \\\n",
       "0                                                  7.0                     \n",
       "1                                                  1.0                     \n",
       "2                                                  2.0                     \n",
       "3                                                  3.0                     \n",
       "4                                                  4.0                     \n",
       "..                                                 ...                     \n",
       "994                                                NaN                     \n",
       "995                                                NaN                     \n",
       "996                                                NaN                     \n",
       "997                                                NaN                     \n",
       "998                                                NaN                     \n",
       "\n",
       "     Regarding my WOOP wishes, I can see more clearly now.  \\\n",
       "0                                                  7.0       \n",
       "1                                                  3.0       \n",
       "2                                                  2.0       \n",
       "3                                                  2.0       \n",
       "4                                                  3.0       \n",
       "..                                                 ...       \n",
       "994                                                NaN       \n",
       "995                                                NaN       \n",
       "996                                                NaN       \n",
       "997                                                NaN       \n",
       "998                                                NaN       \n",
       "\n",
       "     I think I will benefit from WOOP.  \\\n",
       "0                                  7.0   \n",
       "1                                  1.0   \n",
       "2                                  2.0   \n",
       "3                                  3.0   \n",
       "4                                  3.0   \n",
       "..                                 ...   \n",
       "994                                NaN   \n",
       "995                                NaN   \n",
       "996                                NaN   \n",
       "997                                NaN   \n",
       "998                                NaN   \n",
       "\n",
       "     I think the WOOP exercise is interesting.  \\\n",
       "0                                          7.0   \n",
       "1                                          2.0   \n",
       "2                                          2.0   \n",
       "3                                          5.0   \n",
       "4                                          4.0   \n",
       "..                                         ...   \n",
       "994                                        NaN   \n",
       "995                                        NaN   \n",
       "996                                        NaN   \n",
       "997                                        NaN   \n",
       "998                                        NaN   \n",
       "\n",
       "     I would be interested in learning more about the WOOP exercise.  \\\n",
       "0                                                  7.0                 \n",
       "1                                                  2.0                 \n",
       "2                                                  2.0                 \n",
       "3                                                  4.0                 \n",
       "4                                                  3.0                 \n",
       "..                                                 ...                 \n",
       "994                                                NaN                 \n",
       "995                                                NaN                 \n",
       "996                                                NaN                 \n",
       "997                                                NaN                 \n",
       "998                                                NaN                 \n",
       "\n",
       "     Unnamed: 13  Unnamed: 14  Unnamed: 15  Unnamed: 16  Unnamed: 17  \\\n",
       "0            NaN          NaN          NaN          NaN          NaN   \n",
       "1            NaN          NaN          NaN          NaN          NaN   \n",
       "2            NaN          NaN          NaN          NaN          NaN   \n",
       "3            NaN          NaN          NaN          NaN          NaN   \n",
       "4            NaN          NaN          NaN          NaN          NaN   \n",
       "..           ...          ...          ...          ...          ...   \n",
       "994          NaN          NaN          NaN          NaN          NaN   \n",
       "995          NaN          NaN          NaN          NaN          NaN   \n",
       "996          NaN          NaN          NaN          NaN          NaN   \n",
       "997          NaN          NaN          NaN          NaN          NaN   \n",
       "998          NaN          NaN          NaN          NaN          NaN   \n",
       "\n",
       "     Unnamed: 18  Unnamed: 19  \n",
       "0            NaN          NaN  \n",
       "1            NaN          NaN  \n",
       "2            NaN          NaN  \n",
       "3            NaN          NaN  \n",
       "4            NaN          NaN  \n",
       "..           ...          ...  \n",
       "994          NaN          NaN  \n",
       "995          NaN          NaN  \n",
       "996          NaN          NaN  \n",
       "997          NaN          NaN  \n",
       "998          NaN          NaN  \n",
       "\n",
       "[999 rows x 20 columns]"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clean"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>condition</th>\n",
       "      <th>wish</th>\n",
       "      <th>outcome</th>\n",
       "      <th>outcome2</th>\n",
       "      <th>useful</th>\n",
       "      <th>mins</th>\n",
       "      <th>other</th>\n",
       "      <th>reuse</th>\n",
       "      <th>clarity</th>\n",
       "      <th>benefit</th>\n",
       "      <th>interest</th>\n",
       "      <th>learn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>558af269fdf99b7dfef4d7bd</td>\n",
       "      <td>MC</td>\n",
       "      <td>do a Bible study</td>\n",
       "      <td>finish Bible study and feel fulfilled</td>\n",
       "      <td>I'll do the Bible study I've been meaning to d...</td>\n",
       "      <td>7.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>55b1add5fdf99b6731f04c5a</td>\n",
       "      <td>MC</td>\n",
       "      <td>I want to clean my house</td>\n",
       "      <td>I will get everything tidy</td>\n",
       "      <td>I will feel better in a nice clean house</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5626a6cfddff3c0011bcd3d8</td>\n",
       "      <td>I</td>\n",
       "      <td>Eat healthy and exercise</td>\n",
       "      <td>I burn more calories than I eat</td>\n",
       "      <td>I feel accomplished and good about mysefl</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>56a5da6181a8ca000d3e7f40</td>\n",
       "      <td>MC</td>\n",
       "      <td>Spend quality time with my cat</td>\n",
       "      <td>My cat appears happy</td>\n",
       "      <td>When my cat is happy, he is laying next to me ...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>56df2ea2452e1300056bc7df</td>\n",
       "      <td>MC</td>\n",
       "      <td>Go out to eat</td>\n",
       "      <td>Care Free</td>\n",
       "      <td>Happy, no problems</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         id condition                            wish  \\\n",
       "0  558af269fdf99b7dfef4d7bd        MC                do a Bible study   \n",
       "1  55b1add5fdf99b6731f04c5a        MC        I want to clean my house   \n",
       "2  5626a6cfddff3c0011bcd3d8         I        Eat healthy and exercise   \n",
       "3  56a5da6181a8ca000d3e7f40        MC  Spend quality time with my cat   \n",
       "4  56df2ea2452e1300056bc7df        MC                   Go out to eat   \n",
       "\n",
       "                                 outcome  \\\n",
       "0  finish Bible study and feel fulfilled   \n",
       "1             I will get everything tidy   \n",
       "2        I burn more calories than I eat   \n",
       "3                   My cat appears happy   \n",
       "4                             Care Free    \n",
       "\n",
       "                                            outcome2  useful  mins  other  \\\n",
       "0  I'll do the Bible study I've been meaning to d...     7.0   1.0    7.0   \n",
       "1           I will feel better in a nice clean house     1.0   1.0    2.0   \n",
       "2          I feel accomplished and good about mysefl     3.0   1.0    2.0   \n",
       "3  When my cat is happy, he is laying next to me ...     4.0   1.0    4.0   \n",
       "4                                 Happy, no problems     3.0   1.0    4.0   \n",
       "\n",
       "   reuse  clarity  benefit  interest  learn  \n",
       "0    7.0      7.0      7.0       7.0    7.0  \n",
       "1    1.0      3.0      1.0       2.0    2.0  \n",
       "2    2.0      2.0      2.0       2.0    2.0  \n",
       "3    3.0      2.0      3.0       5.0    4.0  \n",
       "4    4.0      3.0      3.0       4.0    3.0  "
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "colname = ['id', 'condition', 'wish', 'outcome', 'outcome2', 'useful', 'mins', 'other', 'reuse', 'clarity', 'benefit', 'interest', 'learn']\n",
    "clean = clean.iloc[:256,:13]\n",
    "clean.columns= colname\n",
    "clean.fillna(\"\", inplace=True)\n",
    "clean.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "clean['all'] = clean.wish + \" \" + clean.outcome + \" \" + clean.outcome2\n",
    "clean.drop(columns = ['wish', 'outcome', 'outcome2'], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "def standard(entry):\n",
    "    new = entry.lower()\n",
    "    new = nltk.word_tokenize(new)\n",
    "    return(new)\n",
    "\n",
    "stop_words = stopwords.words(\"english\")\n",
    "def stop_words_counter(alist):\n",
    "    num_stop = sum([1 for x in alist if x in stop_words])\n",
    "    return(num_stop)\n",
    "\n",
    "def remove_stop(alist):\n",
    "    return [word for word in alist if (word not in stop_words) and (word.isalpha())]\n",
    "\n",
    "# def quintiler(series):\n",
    "#     pd.qcut(series, 5, labels = [1,2,3,4,5])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "clean['all'] = clean['all'].apply(standard)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "clean['num_stop'] = clean['all'].apply(stop_words_counter)\n",
    "clean['all'] = clean['all'].apply(remove_stop)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "model = gensim.models.Word2Vec(clean['all'], min_count = 2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/Cellar/ipython/7.8.0/libexec/vendor/lib/python3.7/site-packages/ipykernel_launcher.py:1: DeprecationWarning: Call to deprecated `most_similar` (Method will be removed in 4.0.0, use self.wv.most_similar() instead).\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[('finish', 0.36381715536117554),\n",
       " ('parents', 0.3620014786720276),\n",
       " ('wife', 0.34891700744628906),\n",
       " ('important', 0.34717047214508057),\n",
       " ('get', 0.34417665004730225),\n",
       " ('great', 0.3326857089996338),\n",
       " ('good', 0.3091842234134674),\n",
       " ('feel', 0.2970920503139496),\n",
       " ('go', 0.29051727056503296),\n",
       " ('sleep', 0.2857987880706787)]"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.most_similar('happy')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "useful\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mins\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "other\n"
     ]
    },
    {
     "data": {
      "image/png": "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GIAyBwADUOYAYADKHAAMQJkDgAEocwAwAGUOAAagzAHAAJQ5ABiAMgcAA1DmAGAAyhwADECZA4ABKHMAMABlDgAGoMwBwACUOQAYgDIHAANQ5gBgAMocAAxAmQOAAShzADAAZQ4ABqDMAcAAkyrz48ePq7y8XCtXrtSf/vSnVGUCACTImeyK/f39amho0NGjR5Wbm6vq6motW7ZM9913XyrzAQDikHSZd3Z26qGHHtKdd94pSVq1apXa29v1zDPPxLV+To4j2V3Lc1de0utOll37nszxmqzpNmZeX5ll15jtfJ6TOd6x1nFYlmUlE+b3v/+9rly5orq6OklSU1OTzp07p1/96lfJbA4AMAlJz5nf6j3A4bDv3R0AprOky7ywsFCDg4PR24FAQB6PJyWhAACJSbrMv/vd76qrq0ufffaZrl69qhMnTqi4uDiV2QAAcUr6A9DCwkLV1dWppqZG4XBYVVVVeuCBB1KZDQAQp6Q/AAUAZA++AQoABqDMAcAAlDkAGIAyBwADJH01ix1GRkZUXV2t3/3ud/r6179ud5ykHTx4UH/5y18kST6fTz//+c9tTpS8l19+WW+++aYcDoeqqqr04x//2O5Ik/bCCy/o888/1969e+2OkrSamhoFg0E5ndf/iT/33HMqKiqyOVXiTp48qYMHD+rKlStasWKF6uvr7Y6UlKamJv3xj3+M3r58+bIqKyu1a9eu1O3EmiL+/ve/W6tXr7buv/9+69KlS3bHSdp7771nff/737dCoZA1NjZm1dTUWCdOnLA7VlLef/99q7q62gqHw9bVq1etkpIS68KFC3bHmpTOzk5r2bJl1vbt2+2OkrTx8XFr+fLlVjgctjvKpHzyySfWihUrrL6+PmtsbMxat26d9c4779gda9L+9a9/WStXrrSCwWBKtztlplkaGxu1e/fuKf8tU7fbrR07dig3N1cul0v33nuvPv30U7tjJeXBBx/U66+/LqfTqWAwqEgkotmzZ9sdK2lffPGFGhoatHnzZrujTMrFixflcDi0ceNGfe9737vhjHAqeeutt1ReXq758+fL5XKpoaFhSv7v4v89++yzqqurU35+fkq3O2WmWZ5//nm7I6TE4sWLoz/39PSora1NR44csTHR5LhcLh04cECvvfaaysrKVFhYaHekpO3atUt1dXXq6+uzO8qkDA0Nyev16tlnn9Xo6Khqamr0jW98Q8uXL7c7WkJ6e3vlcrn05JNPamBgQCUlJdq6davdsSals7NTo6OjevTRR1O+7SlzZm6ajz/+WD/5yU+0fft23XPPPXbHmZTa2lp1dXWpr69PjY2NdsdJSlNTkxYsWCCv12t3lElbsmSJ9u3bp9mzZys/P19VVVXq6OiwO1bCIpGIurq69OKLL6qxsVH/+Mc/1NzcbHesSTly5EjaPleizG1w5swZbdiwQdu2bdNjjz1md5ykXbhwQefPn5ck5eXlqbS0VB999JHNqZLT1tam9957T5WVlTpw4IBOnjypX//613bHSsrp06fV1dUVvW1ZVvSD0Knk7rvvltfrVX5+vmbNmqVHHnlE586dsztW0sbGxvS3v/1NDz/8cFq2T5lnWF9fn55++mnt379fFRUVdseZlMuXL6u+vl5jY2MaGxvT22+/raVLl9odKymHDh1Sa2urjh07ptraWj388MPauXOn3bGSMjw8rH379ikUCmlkZETNzc1auXKl3bESVlJSolOnTmloaEiRSETvvvuu7r//frtjJe2jjz7SPffck7bPlabe2/UU9+qrryoUCt1w2Vt1dbXWrVtnY6rk+Hw+nT17VmvWrNGMGTNUWlo65d+gTFBSUhJ9XsbHx7V+/XotWbLE7lgJKyoq0lNPPaX169crHA5r+fLlevzxx+2OlbRLly5p/vz5ads+v2gLAAzANAsAGIAyBwADUOYAYADKHAAMQJkDgAEocwAwAGUOAAagzAHAAP8FQ7Kox2rtGFsAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "reuse\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clarity\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "benefit\n"
     ]
    },
    {
     "data": {
      "image/png": "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adOm2T1Swnbs2KGKigp1dHTYPcqI9PT0yOv1ateuXerv71dZWZl+9KMfadGiRXaPFpf29na5XC699NJL6urqUn5+vrZs2WL3WCPS3Nys/v5+LV26NOmPPWZemZvm8uXL+tnPfqZt27bp4YcftnucESkvL1dLS4s6OjpUU1Nj9zgJOXLkiGbMmCGv12v3KCM2b9487d27VxMnTlR2drZKSkrU1NRk91hxC4fDamlp0RtvvKGamhr99a9/VW1trd1jjcjhw4dT9nMlYm6D8+fPa82aNdq6dauee+45u8dJ2JUrV3Tp0iVJUlZWlgoKCvTll1/aPFViGhoa9Pnnn6u4uFj79+/XqVOn9Nvf/tbusRJy7tw5tbS0DF22LGvoB6FjydSpU+X1epWdna0JEybo2Wef1cWLF+0eK2EDAwP685//rGeeeSYlj0/M06yjo0ObNm3Svn37VFRUZPc4I3Ljxg1VVVVpYGBAAwMD+uSTTzR//ny7x0rIu+++q/r6eh07dkzl5eV65plnVFlZafdYCent7dXevXsVCoXU19en2tpaLV682O6x4pafn6/Tp0+rp6dH4XBYn332mZ544gm7x0rYl19+qYcffjhlP1cae0/XY9zbb7+tUCh0x6+9lZaWatWqVTZOlRifz6cLFy5oxYoVGjdunAoKCsb8E5QJ8vPzh74ukUhEq1ev1rx58+weK265ublat26dVq9ercHBQS1atEjPP/+83WMl7Pr165o+fXrKHp8TbQGAATjMAgAGIOYAYABiDgAGIOYAYABiDgAGIOYAYABiDgAGIOYAYID/ALwAtmMoD/gUAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "interest\n"
     ]
    },
    {
     "data": {
      "image/png": "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+vXrQw8++GCop6fH6jgxe++990I//OEPQ36/PxQIBELl5eWh06dPWx0rJu+//36otLQ0NDo6Grp161YoLy8vdO3aNatjTUl7e3to5cqVoV27dlkdJWZjY2OhVatWhUZHR62OMiUfffRR6NFHHw319fWFAoFAqKysLPTOO+9YHWvK/vGPf4TWrFkT8vl807rdWXOapb6+Xnv37p31V5k6HA7t3r1bKSkpSk5O1v33369//etfVseKycMPP6zXXntNdrtdPp9PwWBQaWlpVseK2aeffqq6ujpt27bN6ihTcv36ddlsNm3ZskXf//737zginE3eeustFRYWavHixUpOTlZdXd2s/N/F/9q3b5+qqqqUnp4+rdudNadZnn/+easjTItly5aN/9zV1aWWlhYdP37cwkRTk5ycrEOHDunVV19VQUGBMjMzrY4Usz179qiqqkp9fX1WR5mSoaEhuVwu7du3TyMjIyovL9c3vvENrVq1yupoUenu7lZycrKefvppDQwMKC8vTzt27LA61pS0t7drZGRE69atm/Ztz5ojc9NcvXpVP/nJT7Rr1y4tXbrU6jhTUllZqY6ODvX19am+vt7qODFpaGjQkiVL5HK5rI4yZcuXL9eBAweUlpam9PR0lZSUqK2tzepYUQsGg+ro6NCLL76o+vp6/fWvf1VjY6PVsabk+PHjcXtdiTK3wPnz57V582bt3LlTjz/+uNVxYnbt2jVdvnxZkpSamqr8/HxduXLF4lSxaWlp0Xvvvafi4mIdOnRIZ86c0W9+8xurY8Xk3Llz6ujoGL8dCoXGXwidTe677z65XC6lp6drwYIFeuyxx3Tx4kWrY8UsEAjoww8/1OrVq+Oyfcp8hvX19Wn79u06ePCgioqKrI4zJb29vaqpqVEgEFAgENDbb7+tFStWWB0rJkePHlVzc7NOnjypyspKrV69WtXV1VbHismNGzd04MAB+f1+DQ8Pq7GxUWvWrLE6VtTy8vJ09uxZDQ0NKRgM6t1339WDDz5odayYXblyRUuXLo3b60qz78/1LPfKK6/I7/ff8ba30tJSlZWVWZgqNm63WxcuXNCGDRs0b9485efnz/o/UCbIy8sbf17Gxsa0adMmLV++3OpYUcvJydEzzzyjTZs2aXR0VKtWrdITTzxhdayY9fT0aPHixXHbPh+0BQAG4DQLABiAMgcAA1DmAGAAyhwADECZA4ABKHMAMABlDgAGoMwBwAD/B2WgLa9ZyB5mAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "learn\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for each_col in clean.loc[:,'useful':'learn']:\n",
    "    print(each_col)\n",
    "    plt.hist(clean[each_col])\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'Word2Vec' object has no attribute 'toarray'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-102-a5f845b3a8d2>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtoarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m: 'Word2Vec' object has no attribute 'toarray'"
     ]
    }
   ],
   "source": [
    "model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
